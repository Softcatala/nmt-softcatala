variables:
  GIT_SUBMODULE_STRATEGY: recursive


image: docker:latest
services:
  - docker:dind

stages:
  - test
  - models
  - translate-service
  - translate-service-test
  - translate-service-publish
  - translate-batch
  - use-models-tools

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

test:
  image: python:3.11.0-slim-bullseye
  before_script:
    - apt-get update && apt-get install make gcc git -y
    - pip install nose2
  stage: test
  script:
    - pip install -r use-models-tools/requirements.txt
    - make test

models:
  stage: models
  script:
    - export REPO_NAME=$CI_REGISTRY_IMAGE/nmt-models
    - export IMAGE_NAME=$REPO_NAME:$CI_COMMIT_REF_NAME
    - export DOCKER_PATH=models/docker/Dockerfile
    - docker build --tag nmt-models --tag $IMAGE_NAME --tag $REPO_NAME:$CI_COMMIT_SHA . -f $DOCKER_PATH
    - docker push $REPO_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME   

translate-service:
  stage: translate-service
  script:
    - export REPO_NAME=$CI_REGISTRY_IMAGE/translate-service
    - export IMAGE_NAME=$REPO_NAME:$CI_COMMIT_REF_NAME
    - export DOCKER_PATH=serving/translate-service/docker/Dockerfile
    - docker build --tag translate-service -f $DOCKER_PATH --tag $IMAGE_NAME --tag $REPO_NAME:$CI_COMMIT_SHA .

translate-service-test:
  stage: translate-service-test
  script:
    - export IMAGE_NAME=translate-service-test
    - export DOCKER_PATH=serving/translate-service/docker/Dockerfile-test
    - docker build -f $DOCKER_PATH --tag $IMAGE_NAME .
    - docker run -t $IMAGE_NAME

translate-service-publish:
  stage: translate-service-publish
  script:
    - export REPO_NAME=$CI_REGISTRY_IMAGE/translate-service
    - export IMAGE_NAME=$REPO_NAME:$CI_COMMIT_REF_NAME
    - docker push $REPO_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME

translate-batch:
  stage: translate-batch
  script:
    - export REPO_NAME=$CI_REGISTRY_IMAGE/translate-batch
    - export IMAGE_NAME=$REPO_NAME:$CI_COMMIT_REF_NAME
    - export DOCKER_PATH=serving/translate-batch/docker/Dockerfile
    - docker build -f $DOCKER_PATH --tag $IMAGE_NAME --tag $REPO_NAME:$CI_COMMIT_SHA .
    - docker push $REPO_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME

use-models-tools:
  stage: use-models-tools
  script:
    - export REPO_NAME=$CI_REGISTRY_IMAGE/use-models-tools
    - export IMAGE_NAME=$REPO_NAME:$CI_COMMIT_REF_NAME
    - export DOCKER_PATH=use-models-tools/docker/Dockerfile
    - docker build -f $DOCKER_PATH --tag latest --tag $IMAGE_NAME --tag $REPO_NAME:$CI_COMMIT_SHA .
    - docker push $REPO_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME
